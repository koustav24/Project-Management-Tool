<Dialog
      open={open}
      onClose={handleCloseDialog}
      maxWidth="sm"
      fullWidth
      PaperProps={{
        sx: {
          padding: "16px",
          width: "450px", // Adjust width as needed
          maxWidth: "100%", // Ensure responsiveness
        },
      }}
    >
      <DialogTitle sx={{ fontWeight: "bold", fontSize: "18px", textAlign: "center" }}>
        Create Project Issue
      </DialogTitle>

      <DialogContent sx={{ display: "flex", flexDirection: "column", gap: 2 }}>
        {/* Project Title */}
        <Typography variant="subtitle2" sx={{ fontWeight: "bold", fontSize: "14px" }}>
          Project Title
        </Typography>
        <TextField
          fullWidth
          size="small"
          variant="outlined"
          value={projectTitle}
          onChange={(e) => setProjectTitle(e.target.value)}
          InputProps={{
            inputProps: { style: { fontSize: "14px", padding: "10px" } },
          }}
        />

        {/* Description */}
        <Typography variant="subtitle2" sx={{ fontWeight: "bold", fontSize: "14px" }}>
          Description
        </Typography>
        <TextField
          fullWidth
          size="small"
          variant="outlined"
          multiline
          rows={3}
          value={description}
          onChange={(e) => setDescription(e.target.value)}
          InputProps={{
            inputProps: { style: { fontSize: "14px", padding: "10px" } },
          }}
        />

        {/* Due Date */}
        <Typography variant="subtitle2" sx={{ fontWeight: "bold", fontSize: "14px" }}>
          Due Date
        </Typography>
        <TextField
          fullWidth
          size="small"
          type="date"
          value={dueDate}
          onChange={(e) => setDueDate(e.target.value)}
          InputProps={{
            inputProps: { style: { fontSize: "14px", padding: "10px" } },
          }}
        />

        {/* Assign Members */}
        <Typography variant="subtitle2" sx={{ fontWeight: "bold", fontSize: "14px" }}>
          Assignees
        </Typography>
        <Autocomplete
          size="small"
          multiple
          options={members}
          getOptionLabel={(option) => option.name}
          value={members?.filter((m) => assignees.includes(m._id))}
          onChange={(event, newValue) => setAssignees(newValue.map((item) => item._id))}
          renderTags={(selected, getTagProps) =>
            selected.map((option, index) => (
              <Chip {...getTagProps({ index })} key={option._id} sx={{ fontSize: "12px" }} label={option.name} />
            ))
          }
          renderInput={(params) => (
            <TextField {...params} label={loadingMembers ? "Loading..." : "Select Assignee"} disabled={loadingMembers} />
          )}
          fullWidth
        />

        {/* Upload File */}
        <Typography variant="subtitle2" sx={{ fontWeight: "bold", fontSize: "14px" }}>
          Attach File
        </Typography>
        <TextField fullWidth type="file" size="small" InputProps={{ inputProps: { style: { fontSize: "14px" } } }} />

        {/* Set Reminder */}
        <Typography variant="subtitle2" sx={{ fontWeight: "bold", fontSize: "14px" }}>
          Set Reminder
        </Typography>
        <FormControl fullWidth variant="outlined" size="small">
          <Select
            value={reminder}
            onChange={(e) => setReminder(e.target.value)}
            displayEmpty
            sx={{ fontSize: "14px", padding: "4px 10px" }}
          >
            <MenuItem value="none">None</MenuItem>
            <MenuItem value="1_hour">1 Hour Before</MenuItem>
            <MenuItem value="1_day">1 Day Before</MenuItem>
          </Select>
        </FormControl>

        {/* Buttons */}
        <div style={{ display: "flex", justifyContent: "space-between", marginTop: "16px" }}>
          <Button variant="outlined" onClick={handleCloseDialog} sx={{ fontSize: "14px" }}>
            Cancel
          </Button>
          <Button variant="contained" color="primary" onClick={handleAddProject} disabled={isLoadingAddNewProject}>
            Create
          </Button>
        </div>
      </DialogContent>
    </Dialog>