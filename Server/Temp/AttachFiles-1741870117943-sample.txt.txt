1.What is the output of the following C code? Assume that the address of x is 2000 (in decimal) and an integer requires four bytes of memory.

#include <stdio.h>
int main()
{ 
   unsigned int x[4][3] = {{1, 2, 3}, {4, 5, 6}, 
                           {7, 8, 9}, {10, 11, 12}};
   printf("%u, %u, %u", x+3, *(x+3), *(x+2)+3);
}
a)2036, 2036, 2036
b)2012, 4, 2204
c)2036, 10, 10
d)2012, 4, 6

2.In the context of the below program snippet, pick the best answer.
#include <stdio.h>
int arr[10][10][10];
int main()
{
 arr[5][5][5] = 123;
 return 0;
}
Which of the given printf statement(s) would be able to print arr[5][5][5]


(i) printf("%d",arr[5][5][5]);
(ii) printf("%d",*(*(*(arr+5)+5)+5));
(iii) printf("%d",(*(*(arr+5)+5))[5]);
(iv) printf("%d",*((*(arr+5))[5]+5));

a)only (i) would compile and print 123.

b)both (i) and (ii) would compile and both would print 123.

c)only (i), (ii) and (iii) would compile but only (i) and (ii) would print 123.

d)only (i), (ii) and (iii) would compile and all three would print 123.

e)all (i), (ii), (iii) and (iv) would compile but only (i) and (ii) would print 123.

f)all (i), (ii), (iii) and (iv) would compile and all would print 123.

3.Consider the following C function

#include <stdio.h>
int main(void)
   {
    char c[ ] = "ICRBCSIT17";
    char *p=c;
    printf("%s", c+2[p] – 6[p] – 1);
    return 0;
   }
The output of the program is
a)SI
b)IT
c)TI
d)17

4.#include <stdio.h>

int fun(int x) {
    if (x > 100)
        return x - 10;
    else
        return fun(fun(x + 11));
}
What value would the following function return for the input x=95
a)89
b)90
c)91
d)92

5.#include <stdio.h> 
int main()
{
 void *pVoid;
 pVoid = (void*)0;
 printf("%lu",sizeof(pVoid));
 return 0;
}
Pick the best statement for the above C program snippet Note(It is on 32 bit System).

a)Assigning (void *)0 to pVoid isn’t correct because memory hasn’t been allocated. That’s why no compile error but it'll result in run time error.

b)Assigning (void *)0 to pVoid isn’t correct because a hard coded value (here zero i.e. 0) can’t assigned to any pointer. That’s why it'll result in compile error.

c)No compile issue and no run time issue. And the size of the void pointer i.e. pVoid would equal to size of int.

d)sizeof() operator isn’t defined for a pointer of void type.

6.# include 
int main( )
{
  static int a[] = {10, 20, 30, 40, 50};
  static int *p[] = {a, a+3, a+4, a+1, a+2};
  int **ptr = p;
  ptr++;
  printf("%d%d", ptr - p, **ptr};
}
The output of the program is _________

a)140
b)120
c)100
d)40

7.Assume that the size of int is 4.

#include <stdio.h>
void f(char**);
int main()
{
    char *argv[] = { "ab", "cd", "ef", "gh", "ij", "kl" };
    f(argv);
    return 0;
}
void f(char **p)
{
    char *t;
    t = (p += sizeof(int))[-1];
    printf("%s\\n", t);
}
a)ab
b)cd
c)ef
d)gh

8.Suppose that in a C program snippet, followings statements are used.

i) sizeof(int);
ii) sizeof(int*);
iii) sizeof(int**);
Assuming size of pointer is 4 bytes and size of int is also 4 bytes, pick the most correct answer from the given options.

a) Only i) would compile successfully and it would return size as 4.

b) i), ii) and iii) would compile successfully and size of each would be same i.e. 4

c) i), ii) and iii) would compile successfully but the size of each would be different and would be decided at run time.

d) ii) and iii) would result in compile error but i) would compile and result in size as 4.

9.Consider the following array declaration:
int arr[4] = {2, 4, 5};
What will be the output of the following 'C' statement?
printf("%d", 3[arr]);
a)0
b)2
c)Garbage
d)5

10.